import{d as v,f as D,w as b,h as x,v as S,o as E,c as f,r as V,x as _,D as F,F as T,_ as N,N as w}from"./chunks/framework.85410589.js";var B=globalThis&&globalThis.__assign||function(){return(B=Object.assign||function(e){for(var n,a=1,o=arguments.length;a<o;a++)for(var s in n=arguments[a])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e}).apply(this,arguments)},k=function(){function e(n,a,o){var s=this;this.endVal=a,this.options=o,this.version="2.4.2",this.defaults={startVal:0,decimalPlaces:0,duration:2,useEasing:!0,useGrouping:!0,useIndianSeparators:!1,smartEasingThreshold:999,smartEasingAmount:333,separator:",",decimal:".",prefix:"",suffix:"",enableScrollSpy:!1,scrollSpyDelay:200,scrollSpyOnce:!1},this.finalEndVal=null,this.useEasing=!0,this.countDown=!1,this.error="",this.startVal=0,this.paused=!0,this.once=!1,this.count=function(l){s.startTime||(s.startTime=l);var r=l-s.startTime;s.remaining=s.duration-r,s.useEasing?s.countDown?s.frameVal=s.startVal-s.easingFn(r,0,s.startVal-s.endVal,s.duration):s.frameVal=s.easingFn(r,s.startVal,s.endVal-s.startVal,s.duration):s.frameVal=s.startVal+(s.endVal-s.startVal)*(r/s.duration);var c=s.countDown?s.frameVal<s.endVal:s.frameVal>s.endVal;s.frameVal=c?s.endVal:s.frameVal,s.frameVal=Number(s.frameVal.toFixed(s.options.decimalPlaces)),s.printValue(s.frameVal),r<s.duration?s.rAF=requestAnimationFrame(s.count):s.finalEndVal!==null?s.update(s.finalEndVal):s.callback&&s.callback()},this.formatNumber=function(l){var r,c,i,y,A=l<0?"-":"";r=Math.abs(l).toFixed(s.options.decimalPlaces);var d=(r+="").split(".");if(c=d[0],i=d.length>1?s.options.decimal+d[1]:"",s.options.useGrouping){y="";for(var h=3,m=0,t=0,p=c.length;t<p;++t)s.options.useIndianSeparators&&t===4&&(h=2,m=1),t!==0&&m%h==0&&(y=s.options.separator+y),m++,y=c[p-t-1]+y;c=y}return s.options.numerals&&s.options.numerals.length&&(c=c.replace(/[0-9]/g,function(u){return s.options.numerals[+u]}),i=i.replace(/[0-9]/g,function(u){return s.options.numerals[+u]})),A+s.options.prefix+c+i+s.options.suffix},this.easeOutExpo=function(l,r,c,i){return c*(1-Math.pow(2,-10*l/i))*1024/1023+r},this.options=B(B({},this.defaults),o),this.formattingFn=this.options.formattingFn?this.options.formattingFn:this.formatNumber,this.easingFn=this.options.easingFn?this.options.easingFn:this.easeOutExpo,this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.endVal=this.validateValue(a),this.options.decimalPlaces=Math.max(this.options.decimalPlaces),this.resetDuration(),this.options.separator=String(this.options.separator),this.useEasing=this.options.useEasing,this.options.separator===""&&(this.options.useGrouping=!1),this.el=typeof n=="string"?document.getElementById(n):n,this.el?this.printValue(this.startVal):this.error="[CountUp] target is null or undefined",typeof window<"u"&&this.options.enableScrollSpy&&(this.error?console.error(this.error,n):(window.onScrollFns=window.onScrollFns||[],window.onScrollFns.push(function(){return s.handleScroll(s)}),window.onscroll=function(){window.onScrollFns.forEach(function(l){return l()})},this.handleScroll(this)))}return e.prototype.handleScroll=function(n){if(n&&window&&!n.once){var a=window.innerHeight+window.scrollY,o=n.el.getBoundingClientRect(),s=o.top+window.pageYOffset,l=o.top+o.height+window.pageYOffset;l<a&&l>window.scrollY&&n.paused?(n.paused=!1,setTimeout(function(){return n.start()},n.options.scrollSpyDelay),n.options.scrollSpyOnce&&(n.once=!0)):(window.scrollY>l||s>a)&&!n.paused&&n.reset()}},e.prototype.determineDirectionAndSmartEasing=function(){var n=this.finalEndVal?this.finalEndVal:this.endVal;this.countDown=this.startVal>n;var a=n-this.startVal;if(Math.abs(a)>this.options.smartEasingThreshold&&this.options.useEasing){this.finalEndVal=n;var o=this.countDown?1:-1;this.endVal=n+o*this.options.smartEasingAmount,this.duration=this.duration/2}else this.endVal=n,this.finalEndVal=null;this.finalEndVal!==null?this.useEasing=!1:this.useEasing=this.options.useEasing},e.prototype.start=function(n){this.error||(this.callback=n,this.duration>0?(this.determineDirectionAndSmartEasing(),this.paused=!1,this.rAF=requestAnimationFrame(this.count)):this.printValue(this.endVal))},e.prototype.pauseResume=function(){this.paused?(this.startTime=null,this.duration=this.remaining,this.startVal=this.frameVal,this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count)):cancelAnimationFrame(this.rAF),this.paused=!this.paused},e.prototype.reset=function(){cancelAnimationFrame(this.rAF),this.paused=!0,this.resetDuration(),this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.printValue(this.startVal)},e.prototype.update=function(n){cancelAnimationFrame(this.rAF),this.startTime=null,this.endVal=this.validateValue(n),this.endVal!==this.frameVal&&(this.startVal=this.frameVal,this.finalEndVal==null&&this.resetDuration(),this.finalEndVal=null,this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count))},e.prototype.printValue=function(n){var a=this.formattingFn(n);this.el&&(this.el.tagName==="INPUT"?this.el.value=a:this.el.tagName==="text"||this.el.tagName==="tspan"?this.el.textContent=a:this.el.innerHTML=a)},e.prototype.ensureNumber=function(n){return typeof n=="number"&&!isNaN(n)},e.prototype.validateValue=function(n){var a=Number(n);return this.ensureNumber(a)?a:(this.error="[CountUp] invalid start or end value: ".concat(n),null)},e.prototype.resetDuration=function(){this.startTime=null,this.duration=1e3*Number(this.options.duration),this.remaining=this.duration},e}();const P={class:"countup-wrap"},U={name:"CountUp"},O=v({...U,props:{endVal:null,startVal:{default:0},duration:{default:2.5},decimalPlaces:{default:0},autoplay:{type:Boolean,default:!0},loop:{type:[Boolean,Number,String],default:!1},delay:{default:0},options:{default:void 0}},emits:["init","finished"],setup(e,{expose:n,emit:a}){const o=e;let s=D(),l=D();const r=()=>{if(!s.value)return;const t=Number(o.startVal),p=Number(o.endVal),u=Number(o.duration);if(l.value=new k(s.value,p,{startVal:t,duration:u,decimalPlaces:o.decimalPlaces,...o.options}),l.value.error){console.error(l.value.error);return}a("init",l.value)},c=t=>{var p;(p=l.value)==null||p.start(t)};b(()=>o.endVal,t=>{var p;o.autoplay&&((p=l.value)==null||p.update(t))});const i=D(!1);let y=0;const A=()=>{y++,c(()=>{typeof o.loop=="boolean"&&o.loop||o.loop>y?h(()=>{var p;(p=l.value)==null||p.reset(),A()},o.delay):i.value=!0})};let d;const h=(t,p=1)=>{let u;function g(C){u||(u=C),C-u<p*1e3?d=requestAnimationFrame(g):t()}d=requestAnimationFrame(g)};return b(i,t=>{t&&a("finished")}),x(()=>{r(),o.autoplay&&A()}),S(()=>{var t;cancelAnimationFrame(d),(t=l.value)==null||t.reset()}),n({init:r,restart:()=>{r(),c()}}),(t,p)=>(E(),f("div",P,[V(t.$slots,"prefix"),_("span",{ref_key:"elRef",ref:s},null,512),V(t.$slots,"suffix")]))}}),q={name:"CountUpExample"},I=v({...q,setup(e){const n=D(0),a=D(800);function o(){n.value=a.value,a.value=Math.random()*1e3}return(s,l)=>(E(),f(T,null,[F(O,{class:"count-up-container","start-val":n.value,"end-val":a.value},null,8,["start-val","end-val"]),_("button",{class:"button",onClick:o},"更改数字")],64))}});const j=N(I,[["__scopeId","data-v-eb2b1262"]]),M=w(`<h1 id="countup" tabindex="-1">CountUp <a class="header-anchor" href="#countup" aria-hidden="true">#</a></h1><p>数字滚动组件，基于<a href="https://github.com/inorganik/countUp.js/" target="_blank" rel="noreferrer">countup.js</a></p><h2 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#666666;">&lt;</span><span style="color:#B8A965;">count-up</span><span style="color:#DBD7CAEE;"> </span><span style="color:#FDAEB7;font-style:italic;">:start-val=&quot;start&quot;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#FDAEB7;font-style:italic;">:end-val=&quot;end&quot;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">/&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light" tabindex="0"><code><span class="line"><span style="color:#999999;">&lt;</span><span style="color:#998418;">count-up</span><span style="color:#393A34;"> </span><span style="color:#B31D28;font-style:italic;">:start-val=&quot;start&quot;</span><span style="color:#393A34;"> </span><span style="color:#B31D28;font-style:italic;">:end-val=&quot;end&quot;</span><span style="color:#393A34;"> </span><span style="color:#999999;">/&gt;</span></span>
<span class="line"></span></code></pre></div>`,4),R=w(`<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h2><table><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>默认值</th><th>版本</th></tr></thead><tbody><tr><td><code>end-val</code></td><td>结束数值</td><td><code>number | string</code></td><td>必填</td><td></td></tr><tr><td><code>start-val</code></td><td>开始数值</td><td><code>number | string</code></td><td></td><td></td></tr><tr><td><code>duration</code></td><td>动画时长，单位 s</td><td><code>number | string</code></td><td>2.5</td><td></td></tr><tr><td><code>decimal-places</code></td><td>小数点位数</td><td>number</td><td>0</td><td></td></tr><tr><td><code>autoplay</code></td><td>是否自动计数</td><td>boolean</td><td>true</td><td></td></tr><tr><td><code>loop</code></td><td>循环次数，有限次数 / 无限循环</td><td><code>boolean | number | string</code></td><td>false</td><td></td></tr><tr><td><code>delay</code></td><td>循环, 延时，单位 s</td><td>number</td><td>0</td><td></td></tr><tr><td><code>options</code></td><td>countup 配置项</td><td><code>CountUpOptions</code></td><td>undefined</td><td></td></tr></tbody></table><h2 id="countupoptions" tabindex="-1">CountUpOptions <a class="header-anchor" href="#countupoptions" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">startVal</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">number</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// number to start at (0)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">decimalPlaces</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">number</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// number of decimal places (0)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">duration</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">number</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// animation duration in seconds (2)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">useGrouping</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">boolean</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// example: 1,000 vs 1000 (true)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">useIndianSeparators</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">boolean</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// example: 1,00,000 vs 100,000 (false)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">useEasing</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">boolean</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// ease animation (true)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">smartEasingThreshold</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">number</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// smooth easing for large numbers above this if useEasing (999)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">smartEasingAmount</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">number</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// amount to be eased for numbers above threshold (333)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">separator</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">string</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// grouping separator (&#39;,&#39;)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">decimal</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">string</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// decimal (&#39;.&#39;)</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// easingFn: easing function for animation (easeOutExpo)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">easingFn</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">t</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">b</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">c</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">d</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">number</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">formattingFn</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">n</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">string</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// this function formats result</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">prefix</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">string</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// text prepended to result</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">suffix</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">string</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// text appended to result</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">numerals</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">string</span><span style="color:#666666;">[];</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// numeral glyph substitution</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">enableScrollSpy</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">boolean</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// start animation when target is in view</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">scrollSpyDelay</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">number</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// delay (ms) after target comes into view</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">scrollSpyOnce</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">boolean</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// run only once</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">onCompleteCallback</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">any</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// gets called when animation completes</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">plugin</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">CountUpPlugin</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// for alternate animations</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light" tabindex="0"><code><span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">startVal</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">number</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// number to start at (0)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">decimalPlaces</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">number</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// number of decimal places (0)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">duration</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">number</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// animation duration in seconds (2)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">useGrouping</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">boolean</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// example: 1,000 vs 1000 (true)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">useIndianSeparators</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">boolean</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// example: 1,00,000 vs 100,000 (false)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">useEasing</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">boolean</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// ease animation (true)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">smartEasingThreshold</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">number</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// smooth easing for large numbers above this if useEasing (999)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">smartEasingAmount</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">number</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// amount to be eased for numbers above threshold (333)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">separator</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">string</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// grouping separator (&#39;,&#39;)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">decimal</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">string</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// decimal (&#39;.&#39;)</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// easingFn: easing function for animation (easeOutExpo)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">easingFn</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">t</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">b</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">c</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">d</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">number</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">formattingFn</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">n</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">string</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// this function formats result</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">prefix</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">string</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// text prepended to result</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">suffix</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">string</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// text appended to result</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">numerals</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">string</span><span style="color:#999999;">[];</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// numeral glyph substitution</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">enableScrollSpy</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">boolean</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// start animation when target is in view</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">scrollSpyDelay</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">number</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// delay (ms) after target comes into view</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">scrollSpyOnce</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">boolean</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// run only once</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">onCompleteCallback</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">any</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// gets called when animation completes</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">plugin</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">CountUpPlugin</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// for alternate animations</span></span>
<span class="line"></span></code></pre></div>`,4),H=JSON.parse('{"title":"CountUp","description":"","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":2,"title":"API","slug":"api","link":"#api","children":[]},{"level":2,"title":"CountUpOptions","slug":"countupoptions","link":"#countupoptions","children":[]}],"relativePath":"components/count-up.md","lastUpdated":1678780972000}'),$={name:"components/count-up.md"},J=Object.assign($,{setup(e){return(n,a)=>(E(),f("div",null,[M,F(j),R]))}});export{H as __pageData,J as default};
